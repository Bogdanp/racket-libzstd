on: push
name: build
jobs:
  build-linux-aarch64:
    name: build on Ubuntu aarch64
    runs-on: ubuntu-20.04-arm
    steps:
      - uses: actions/checkout@master
      - run: bin/build-linux-aarch64.sh
      - uses: actions/upload-artifact@v4
        with:
          name: linux-aarch64
          path: artifacts/linux-aarch64

  build-linux-x86-64:
    name: build on Ubuntu x86_64
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master
      - run: bin/build-linux-x86-64.sh
      - uses: actions/upload-artifact@v4
        with:
          name: linux-x86-64
          path: artifacts/linux-x86-64

  build-macos-aarch64:
    name: build on macOS aarch64
    runs-on: macOS-13-xlarge
    steps:
      - uses: actions/checkout@master
      - run: arch -arm64 bin/build-macos-aarch64.sh
      - uses: actions/upload-artifact@v4
        with:
          name: macos-aarch64
          path: artifacts/macos-aarch64

  build-macos-x86-64:
    name: build on macOS x86-64
    runs-on: macOS-11
    steps:
      - uses: actions/checkout@master
      - run: bin/build-macos-x86-64.sh
      - uses: actions/upload-artifact@v4
        with:
          name: macos-x86-64
          path: artifacts/macos-x86-64

  # Adapted from https://github.com/facebook/zstd/blob/823b32ce430cd21706a5ffb5bd9e2e6297d919cc/.github/workflows/windows-artifacts.yml
  build-win32:
    name: build on Windows ${{ matrix.arch }}
    runs-on: windows-2022
    strategy:
      matrix:
        include:
          - arch: i686
            msystem: mingw32
            distarch: i386
          - arch: x86_64
            msystem: mingw64
            distarch: x86-64
    defaults:
      run:
        shell: msys2 {0}
        working-directory: zstd
    steps:
      - uses: actions/checkout@master
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          install: make zlib git p7zip mingw-w64-${{matrix.arch}}-gcc
          update: true
      - name: Getting submodule
        run: |
          git submodule update --init
      - name: Building zlib to static link
        run: |
          git clone --depth 1 --branch v1.2.11 https://github.com/madler/zlib
          make -C zlib -f win32/Makefile.gcc libz.a
      - name: Building zstd programs
        run: |
          CPPFLAGS=-I../zlib LDFLAGS=../zlib/libz.a make -j allzstd MOREFLAGS=-static V=1
      - name: Create artifacts
        run: |
          mkdir -p ../artifacts/win32-${{ matrix.distarch }}/lib/
          cp lib/dll/libzstd.dll ../artifacts/win32-${{ matrix.distarch }}/lib/libzstd.dll
      - uses: actions/upload-artifact@v4
        with:
          name: win32-${{ matrix.distarch }}
          path: artifacts/win32-${{ matrix.distarch }}

  deploy:
    name: deploy
    needs: [build-linux-aarch64, build-linux-x86-64, build-macos-aarch64, build-macos-x86-64, build-win32]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master
      - uses: actions/download-artifact@v4
        with:
          name: linux-aarch64
          path: artifacts/linux-aarch64
      - uses: actions/download-artifact@v4
        with:
          name: linux-x86-64
          path: artifacts/linux-x86-64
      - uses: actions/download-artifact@v4
        with:
          name: macos-aarch64
          path: artifacts/macos-aarch64
      - uses: actions/download-artifact@v4
        with:
          name: macos-x86-64
          path: artifacts/macos-x86-64
      - uses: actions/download-artifact@v4
        with:
          name: win32-i386
          path: artifacts/win32-i386
      - uses: actions/download-artifact@v4
        with:
          name: win32-x86-64
          path: artifacts/win32-x86-64
      - run: bin/deploy.sh
        if: >-
          startsWith(github.ref, 'refs/tags/v')
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_PORT: ${{ secrets.DEPLOY_PORT }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_KEY_PASSPHRASE: ${{ secrets.DEPLOY_KEY_PASSPHRASE }}
